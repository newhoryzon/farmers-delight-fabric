plugins {
	id "fabric-loom" version "1.4.+"
	id "maven-publish"
	id "net.researchgate.release" version "2.8.1"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group
version = project.version

repositories {
	/* REI Integration */
	maven { url "https://maven.shedaniel.me/" }
	/* Mod Menu Integration */
	maven { url "https://maven.terraformersmc.com/releases/" }
}

configurations.configureEach {
	resolutionStrategy.eachDependency {
		if (requested.module.name == "fabric-loader") {
			useVersion(loader_version)
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings "net.fabricmc:yarn:$yarn_mappings:v2"
	modImplementation "net.fabricmc:fabric-loader:$loader_version"
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"

	/* Mod Menu Integration */
	modCompileOnly "com.terraformersmc:modmenu:$modmenu_version"
	modCompileOnly("me.shedaniel.cloth:cloth-config-fabric:$clothconfig_version") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modCompileOnly("dev.architectury:architectury-fabric:$architectury_version") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	/* REI Integration */
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version"

	devEnvDependencies(dependencies)
}

def devEnvDependencies(DependencyHandler deps) {
	/* Mod Menu Integration */
	deps.modLocalRuntime("com.terraformersmc:modmenu:$modmenu_version")
	deps.modLocalRuntime("me.shedaniel.cloth:cloth-config-fabric:$clothconfig_version")

	/* REI */
	deps.modLocalRuntime("dev.architectury:architectury-fabric:$architectury_version")
	deps.modLocalRuntime("me.shedaniel:RoughlyEnoughItems-fabric:$rei_version")
}

processResources {
	Map<String, String> properties = new HashMap<>()
	properties.put("version", "$minecraft_version-$version")
	properties.put("loader_version", loader_version)
	properties.put("fabric_version", fabric_version)
	properties.put("minecraft_version", minecraft_version)

	properties.forEach((k, v) -> inputs.property(k, v))

	filesMatching("fabric.mod.json") {
		expand properties
	}

	filesMatching("farmersdelight.mixins.json") {
		expand "archivesBaseName": archivesBaseName
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
	withJavadocJar()
}

jar {
	from("LICENSE")
}

release {
	if (project.hasProperty('release_commit_prefix')) {
		preTagCommitMessage = project.release_commit_prefix
	}
	if (project.hasProperty('development_commit_prefix')) {
		newVersionCommitMessage = project.development_commit_prefix
	}
	tagTemplate = "$minecraft_version".concat('-$version')
	pushReleaseVersionBranch = 'master'
    git {
        requireBranch = /master|develop/
    }
	ignoredSnapshotDependencies = ['fabric-loom:fabric-loom.gradle.plugin']
}